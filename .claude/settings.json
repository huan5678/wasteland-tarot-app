{
  "_comment_statusline": [
    "Statusline 顯示內容：",
    "第一行：📁 專案名稱 | ⎇ Git 分支 | 🤖 模型 | 🕐 時間 | 💰 當前成本/今日總成本",
    "第二行：進度條 XX% used | Resets XX (Asia/Taipei)",
    "",
    "重置時間更新方法：",
    "當用 /status 看到新的重置時間時，執行以下命令更新：",
    "echo 'RESET_TIME=新的時間' > ~/.claude/usage-reset-time.conf",
    "",
    "例如：",
    "echo 'RESET_TIME=3am' > ~/.claude/usage-reset-time.conf",
    "echo 'RESET_TIME=10pm' > ~/.claude/usage-reset-time.conf",
    "",
    "相關腳本：",
    "- ~/.claude/calc-daily-usage-final.sh - 計算使用量和成本",
    "- ~/.claude/usage-reset-time.conf - 儲存重置時間設定"
  ],
  "statusLine": {
    "type": "command",
    "command": "bash -c 'json_input=$(cat); cwd=$(echo \"$json_input\" | jq -r \".workspace.current_dir // .cwd\"); model=$(echo \"$json_input\" | jq -r \".model.id\"); session_id=$(echo \"$json_input\" | jq -r \".session_id // \\\"\\\"\"); usage_data=$(~/.claude/calc-daily-usage-final.sh \"$cwd\" \"$session_id\" 2>/dev/null); current_cost=$(echo \"$usage_data\" | jq -r \".current_cost // 0\"); daily_cost=$(echo \"$usage_data\" | jq -r \".daily_cost // 0\"); usage=$(echo \"$usage_data\" | jq -r \".current_percent // 0\"); reset_time=$(echo \"$usage_data\" | jq -r \".reset_time // \\\"10pm\\\"\"); progress_bar=$(echo \"$usage_data\" | jq -r \".progress_bar // \\\"\\\"\"); current_cost=$(printf \"%.3f\" \"$current_cost\" 2>/dev/null || echo \"0.000\"); daily_cost=$(printf \"%.2f\" \"$daily_cost\" 2>/dev/null || echo \"0.00\"); usage_int=$(printf \"%.0f\" \"$usage\" 2>/dev/null || echo \"0\"); branch=$(cd \"$cwd\" 2>/dev/null && git --no-optional-locks rev-parse --abbrev-ref HEAD 2>/dev/null || echo \"no-git\"); if [[ \"$OSTYPE\" == \"darwin\"* ]] || [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then time=$(date \"+%H:%M:%S\"); elif [[ \"$OSTYPE\" == \"msys\" ]] || [[ \"$OSTYPE\" == \"cygwin\" ]] || [[ \"$OSTYPE\" == \"win32\" ]]; then time=$(date \"+%H:%M:%S\" 2>/dev/null || powershell -c \"Get-Date -Format HH:mm:ss\"); else time=$(date \"+%H:%M:%S\" 2>/dev/null || echo \"--:--:--\"; fi; dir_name=$(basename \"$cwd\"); model_short=$(echo \"$model\" | sed \"s/claude-//\" | sed \"s/-20250929//\"); if command -v printf >/dev/null 2>&1; then printf \"\\033[2;34m📁 %s\\033[0m | \\033[2;32m⎇ %s\\033[0m | \\033[2;36m🤖 %s\\033[0m | \\033[2;90m🕐 %s\\033[0m | \\033[2;33m💰 \\$%s/\\$%s\\033[0m\\n\\033[2;90m%s\\033[0m \\033[2;31m%s%% used\\033[0m | \\033[2;90mResets %s (Asia/Taipei)\\033[0m\" \"$dir_name\" \"$branch\" \"$model_short\" \"$time\" \"$current_cost\" \"$daily_cost\" \"$progress_bar\" \"$usage_int\" \"$reset_time\"; else echo \"📁 $dir_name | ⎇ $branch | 🤖 $model_short | 🕐 $time | 💰 \\$$current_cost/\\$$daily_cost\\n$progress_bar $usage_int% used | Resets $reset_time (Asia/Taipei)\"; fi'"
  }
}
