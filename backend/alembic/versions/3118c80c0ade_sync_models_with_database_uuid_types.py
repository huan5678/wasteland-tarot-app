"""sync_models_with_database_uuid_types

Revision ID: 3118c80c0ade
Revises: 
Create Date: 2025-10-10 12:16:12.594968

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3118c80c0ade'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # CRITICAL FIX: Convert wasteland_cards.id from VARCHAR to UUID FIRST
    # This must happen before creating any tables with FK references to wasteland_cards
    # Clear existing data since VARCHAR IDs cannot be converted to valid UUIDs
    op.execute('TRUNCATE TABLE wasteland_cards CASCADE')
    op.execute('ALTER TABLE wasteland_cards ALTER COLUMN id TYPE UUID USING gen_random_uuid()')

    op.create_table('bingo_rewards_history',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('month_year', sa.Date(), nullable=False),
    sa.Column('line_types', sa.JSON(), nullable=False),
    sa.Column('issued_at_original', sa.DateTime(timezone=True), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rewards_history_user_month', 'bingo_rewards_history', ['user_id', 'month_year'], unique=False)
    op.create_index(op.f('ix_bingo_rewards_history_month_year'), 'bingo_rewards_history', ['month_year'], unique=False)
    op.create_index(op.f('ix_bingo_rewards_history_user_id'), 'bingo_rewards_history', ['user_id'], unique=False)
    op.create_table('community_events',
    sa.Column('event_name', sa.String(length=150), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('short_description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('registration_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('participation_requirements', sa.JSON(), nullable=True),
    sa.Column('participation_rewards', sa.JSON(), nullable=True),
    sa.Column('faction_specific', sa.String(length=50), nullable=True),
    sa.Column('karma_requirements', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('special_rules', sa.JSON(), nullable=True),
    sa.Column('completion_rewards', sa.JSON(), nullable=True),
    sa.Column('leaderboard_enabled', sa.Boolean(), nullable=True),
    sa.Column('achievement_unlocked', sa.String(), nullable=True),
    sa.Column('special_badge', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('success_metrics', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_bingo_numbers',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('cycle_number', sa.Integer(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('number >= 1 AND number <= 25', name='ck_number_range'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_daily_numbers_cycle', 'daily_bingo_numbers', ['cycle_number'], unique=False)
    op.create_index('idx_daily_numbers_date', 'daily_bingo_numbers', ['date'], unique=False)
    op.create_index(op.f('ix_daily_bingo_numbers_date'), 'daily_bingo_numbers', ['date'], unique=True)
    op.create_table('interpretation_templates',
    sa.Column('character_voice', sa.String(length=50), nullable=False),
    sa.Column('character_name', sa.String(length=100), nullable=True),
    sa.Column('personality_traits', sa.JSON(), nullable=False),
    sa.Column('tone', sa.String(length=50), nullable=True),
    sa.Column('vocabulary_style', sa.String(length=50), nullable=True),
    sa.Column('speaking_patterns', sa.JSON(), nullable=True),
    sa.Column('greeting_templates', sa.JSON(), nullable=True),
    sa.Column('card_interpretation_templates', sa.JSON(), nullable=True),
    sa.Column('conclusion_templates', sa.JSON(), nullable=True),
    sa.Column('faction_alignment', sa.String(length=50), nullable=True),
    sa.Column('technical_expertise', sa.JSON(), nullable=True),
    sa.Column('humor_style', sa.String(length=50), nullable=True),
    sa.Column('fallout_references', sa.JSON(), nullable=True),
    sa.Column('custom_phrases', sa.JSON(), nullable=True),
    sa.Column('response_length', sa.String(length=20), nullable=True),
    sa.Column('detail_level', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('user_ratings', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monthly_reset_logs',
    sa.Column('reset_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('reset_metadata', sa.JSON(), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("status IN ('SUCCESS', 'FAILED', 'PARTIAL')", name='ck_reset_status'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reset_logs_date', 'monthly_reset_logs', ['reset_date'], unique=False)
    op.create_index('idx_reset_logs_status', 'monthly_reset_logs', ['status'], unique=False)
    op.create_index(op.f('ix_monthly_reset_logs_reset_date'), 'monthly_reset_logs', ['reset_date'], unique=False)
    op.create_table('reading_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('spread_type', sa.String(length=50), nullable=False),
    sa.Column('spread_config', sa.JSON(), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('session_state', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default='active', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("status IN ('active', 'paused', 'complete')", name='session_status_check'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reading_sessions_created_at', 'reading_sessions', ['created_at'], unique=False)
    op.create_index('idx_reading_sessions_status', 'reading_sessions', ['status'], unique=False)
    op.create_index('idx_reading_sessions_user_id', 'reading_sessions', ['user_id'], unique=False)
    op.create_index('idx_reading_sessions_user_status', 'reading_sessions', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_reading_sessions_user_id'), 'reading_sessions', ['user_id'], unique=False)
    op.create_table('session_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_events_session', 'session_events', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_events_type_created', 'session_events', ['event_type', 'created_at'], unique=False)
    op.create_index('idx_events_user_type', 'session_events', ['user_id', 'event_type', 'created_at'], unique=False)
    op.create_index(op.f('ix_session_events_session_id'), 'session_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_session_events_user_id'), 'session_events', ['user_id'], unique=False)
    op.create_table('spread_templates',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('spread_type', sa.String(length=50), nullable=False),
    sa.Column('card_count', sa.Integer(), nullable=False),
    sa.Column('positions', sa.JSON(), nullable=False),
    sa.Column('interpretation_guide', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('faction_preference', sa.String(length=50), nullable=True),
    sa.Column('radiation_sensitivity', sa.Float(), nullable=True),
    sa.Column('vault_origin', sa.Integer(), nullable=True),
    sa.Column('background_theme', sa.String(length=100), nullable=True),
    sa.Column('audio_ambience', sa.String(length=200), nullable=True),
    sa.Column('pip_boy_interface', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_bingo_cards_history',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('month_year', sa.Date(), nullable=False),
    sa.Column('card_data', sa.JSON(), nullable=False),
    sa.Column('created_at_original', sa.DateTime(timezone=True), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cards_history_user_month', 'user_bingo_cards_history', ['user_id', 'month_year'], unique=False)
    op.create_index(op.f('ix_user_bingo_cards_history_month_year'), 'user_bingo_cards_history', ['month_year'], unique=False)
    op.create_index(op.f('ix_user_bingo_cards_history_user_id'), 'user_bingo_cards_history', ['user_id'], unique=False)
    op.create_table('user_number_claims_history',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('card_id', sa.String(), nullable=False),
    sa.Column('claim_date', sa.Date(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('claimed_at_original', sa.DateTime(timezone=True), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_claims_history_user_month', 'user_number_claims_history', ['user_id', 'claim_date'], unique=False)
    op.create_index(op.f('ix_user_number_claims_history_claim_date'), 'user_number_claims_history', ['claim_date'], unique=False)
    op.create_index(op.f('ix_user_number_claims_history_user_id'), 'user_number_claims_history', ['user_id'], unique=False)
    op.create_table('card_synergies',
    sa.Column('card_1_id', sa.UUID(), nullable=False),
    sa.Column('card_2_id', sa.UUID(), nullable=False),
    sa.Column('card_3_id', sa.UUID(), nullable=True),
    sa.Column('synergy_type', sa.String(length=30), nullable=False),
    sa.Column('strength_rating', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('works_best_in_spreads', sa.JSON(), nullable=True),
    sa.Column('faction_resonance', sa.JSON(), nullable=True),
    sa.Column('karma_influence', sa.JSON(), nullable=True),
    sa.Column('combined_meaning', sa.Text(), nullable=True),
    sa.Column('wasteland_scenario', sa.Text(), nullable=True),
    sa.Column('special_effects', sa.JSON(), nullable=True),
    sa.Column('discovered_by_user', sa.String(), nullable=True),
    sa.Column('discovery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('occurrence_count', sa.Integer(), nullable=True),
    sa.Column('user_ratings', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_1_id'], ['wasteland_cards.id'], ),
    sa.ForeignKeyConstraint(['card_2_id'], ['wasteland_cards.id'], ),
    sa.ForeignKeyConstraint(['card_3_id'], ['wasteland_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_card_synergies_card_1_id'), 'card_synergies', ['card_1_id'], unique=False)
    op.create_index(op.f('ix_card_synergies_card_2_id'), 'card_synergies', ['card_2_id'], unique=False)
    op.create_index(op.f('ix_card_synergies_card_3_id'), 'card_synergies', ['card_3_id'], unique=False)
    op.create_table('completed_readings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('spread_template_id', sa.UUID(), nullable=True),
    sa.Column('interpretation_template_id', sa.UUID(), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('focus_area', sa.String(length=100), nullable=True),
    sa.Column('context_notes', sa.Text(), nullable=True),
    sa.Column('character_voice_used', sa.String(length=50), nullable=False),
    sa.Column('karma_context', sa.String(length=20), nullable=False),
    sa.Column('faction_influence', sa.String(length=50), nullable=True),
    sa.Column('radiation_factor', sa.Float(), nullable=True),
    sa.Column('overall_interpretation', sa.Text(), nullable=True),
    sa.Column('summary_message', sa.Text(), nullable=True),
    sa.Column('prediction_confidence', sa.Float(), nullable=True),
    sa.Column('energy_reading', sa.JSON(), nullable=True),
    sa.Column('session_duration', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('mood_before', sa.String(length=50), nullable=True),
    sa.Column('mood_after', sa.String(length=50), nullable=True),
    sa.Column('privacy_level', sa.String(length=20), nullable=True),
    sa.Column('allow_public_sharing', sa.Boolean(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.Column('share_with_friends', sa.Boolean(), nullable=True),
    sa.Column('anonymous_sharing', sa.Boolean(), nullable=True),
    sa.Column('shared_with_users', sa.JSON(), nullable=True),
    sa.Column('user_satisfaction', sa.Integer(), nullable=True),
    sa.Column('accuracy_rating', sa.Integer(), nullable=True),
    sa.Column('helpful_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('shares_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['interpretation_template_id'], ['interpretation_templates.id'], ),
    sa.ForeignKeyConstraint(['spread_template_id'], ['spread_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_completed_readings_interpretation_template_id'), 'completed_readings', ['interpretation_template_id'], unique=False)
    op.create_index(op.f('ix_completed_readings_spread_template_id'), 'completed_readings', ['spread_template_id'], unique=False)
    op.create_index(op.f('ix_completed_readings_user_id'), 'completed_readings', ['user_id'], unique=False)
    op.create_table('credentials',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='Primary key'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Foreign key to users table'),
    sa.Column('credential_id', sa.Text(), nullable=False, comment='WebAuthn credential ID (Base64URL encoded)'),
    sa.Column('public_key', sa.Text(), nullable=False, comment='Public key (CBOR encoded)'),
    sa.Column('counter', sa.BigInteger(), server_default='0', nullable=False, comment='Signature counter for replay protection'),
    sa.Column('transports', sa.ARRAY(sa.Text()), nullable=True, comment='Supported transports: usb, nfc, ble, internal'),
    sa.Column('device_name', sa.Text(), nullable=True, comment="User-friendly device name (e.g., 'MacBook Touch ID')"),
    sa.Column('aaguid', sa.UUID(), nullable=True, comment='Authenticator AAGUID (Authenticator Attestation GUID)'),
    sa.Column('backup_eligible', sa.Boolean(), server_default='false', nullable=False, comment='Whether credential is backup eligible'),
    sa.Column('backup_state', sa.Boolean(), server_default='false', nullable=False, comment='Whether credential is currently backed up'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Credential creation timestamp'),
    sa.Column('last_used_at', sa.TIMESTAMP(), nullable=True, comment='Last successful authentication timestamp'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='WebAuthn credentials (Passkeys) for passwordless authentication'
    )
    op.create_index(op.f('ix_credentials_credential_id'), 'credentials', ['credential_id'], unique=True)
    op.create_index(op.f('ix_credentials_user_id'), 'credentials', ['user_id'], unique=False)
    op.create_table('reading_patterns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pattern_type', sa.String(), nullable=False),
    sa.Column('pattern_name', sa.String(), nullable=False),
    sa.Column('pattern_data', sa.JSON(), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('first_observed', sa.DateTime(), nullable=True),
    sa.Column('last_observed', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reading_patterns_confidence', 'reading_patterns', ['confidence_score'], unique=False)
    op.create_index('idx_reading_patterns_type', 'reading_patterns', ['pattern_type'], unique=False)
    op.create_index('idx_reading_patterns_user_id', 'reading_patterns', ['user_id'], unique=False)
    op.create_index(op.f('ix_reading_patterns_user_id'), 'reading_patterns', ['user_id'], unique=False)
    op.create_table('user_achievements',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.String(), nullable=False),
    sa.Column('achievement_name', sa.String(length=150), nullable=False),
    sa.Column('achievement_category', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_url', sa.String(length=300), nullable=True),
    sa.Column('badge_image_url', sa.String(length=300), nullable=True),
    sa.Column('rarity', sa.String(length=20), nullable=True),
    sa.Column('progress_current', sa.Integer(), nullable=True),
    sa.Column('progress_required', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('karma_reward', sa.Integer(), nullable=True),
    sa.Column('experience_points', sa.Integer(), nullable=True),
    sa.Column('special_privileges', sa.JSON(), nullable=True),
    sa.Column('unlock_message', sa.Text(), nullable=True),
    sa.Column('faction_exclusive', sa.String(length=50), nullable=True),
    sa.Column('vault_origin', sa.Integer(), nullable=True),
    sa.Column('fallout_reference', sa.Text(), nullable=True),
    sa.Column('wasteland_significance', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('show_on_profile', sa.Boolean(), nullable=True),
    sa.Column('share_with_friends', sa.Boolean(), nullable=True),
    sa.Column('announcement_sent', sa.Boolean(), nullable=True),
    sa.Column('difficulty_rating', sa.Float(), nullable=True),
    sa.Column('estimated_time_hours', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_achievements_user_id'), 'user_achievements', ['user_id'], unique=False)
    op.create_table('user_analytics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_count', sa.Integer(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('avg_session_duration', sa.Float(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(), nullable=True),
    sa.Column('readings_count', sa.Integer(), nullable=True),
    sa.Column('favorite_spread_type', sa.String(), nullable=True),
    sa.Column('favorite_character_voice', sa.String(), nullable=True),
    sa.Column('avg_question_length', sa.Integer(), nullable=True),
    sa.Column('most_drawn_cards', sa.JSON(), nullable=True),
    sa.Column('card_study_time', sa.Integer(), nullable=True),
    sa.Column('favorited_cards', sa.JSON(), nullable=True),
    sa.Column('shares_count', sa.Integer(), nullable=True),
    sa.Column('notes_count', sa.Integer(), nullable=True),
    sa.Column('exports_count', sa.Integer(), nullable=True),
    sa.Column('preferred_themes', sa.JSON(), nullable=True),
    sa.Column('reading_times', sa.JSON(), nullable=True),
    sa.Column('device_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_analytics_last_active', 'user_analytics', ['last_active_at'], unique=False)
    op.create_index('idx_user_analytics_user_id', 'user_analytics', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_analytics_user_id'), 'user_analytics', ['user_id'], unique=False)
    op.create_table('user_bingo_cards',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('month_year', sa.Date(), nullable=False),
    sa.Column('card_data', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'month_year', name='uq_user_month_card')
    )
    op.create_index('idx_user_bingo_cards_active', 'user_bingo_cards', ['is_active'], unique=False, postgresql_where=sa.text('is_active = true'))
    op.create_index('idx_user_bingo_cards_month', 'user_bingo_cards', ['month_year'], unique=False)
    op.create_index('idx_user_bingo_cards_user_month', 'user_bingo_cards', ['user_id', 'month_year'], unique=False)
    op.create_index(op.f('ix_user_bingo_cards_month_year'), 'user_bingo_cards', ['month_year'], unique=False)
    op.create_index(op.f('ix_user_bingo_cards_user_id'), 'user_bingo_cards', ['user_id'], unique=False)
    op.create_table('user_friendships',
    sa.Column('requester_id', sa.UUID(), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('request_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('response_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('blocked_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('share_reading_history', sa.Boolean(), nullable=True),
    sa.Column('share_achievements', sa.Boolean(), nullable=True),
    sa.Column('share_activity_feed', sa.Boolean(), nullable=True),
    sa.Column('share_faction_info', sa.Boolean(), nullable=True),
    sa.Column('share_location', sa.Boolean(), nullable=True),
    sa.Column('can_comment_on_readings', sa.Boolean(), nullable=True),
    sa.Column('can_suggest_cards', sa.Boolean(), nullable=True),
    sa.Column('can_view_private_readings', sa.Boolean(), nullable=True),
    sa.Column('can_send_direct_messages', sa.Boolean(), nullable=True),
    sa.Column('last_interaction', sa.DateTime(timezone=True), nullable=True),
    sa.Column('interaction_count', sa.Integer(), nullable=True),
    sa.Column('mutual_readings_count', sa.Integer(), nullable=True),
    sa.Column('gifts_exchanged', sa.Integer(), nullable=True),
    sa.Column('friendship_notes', sa.Text(), nullable=True),
    sa.Column('custom_nickname', sa.String(length=100), nullable=True),
    sa.Column('friendship_anniversary', sa.DateTime(timezone=True), nullable=True),
    sa.Column('how_they_met', sa.String(length=100), nullable=True),
    sa.Column('shared_faction', sa.String(length=50), nullable=True),
    sa.Column('karma_compatibility', sa.Float(), nullable=True),
    sa.Column('favorite_activities', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('requester_id', 'recipient_id', name='unique_friendship')
    )
    op.create_index(op.f('ix_user_friendships_recipient_id'), 'user_friendships', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_user_friendships_requester_id'), 'user_friendships', ['requester_id'], unique=False)
    op.create_table('user_recommendations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('recommendation_type', sa.String(), nullable=False),
    sa.Column('recommendation_data', sa.JSON(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('shown_count', sa.Integer(), nullable=True),
    sa.Column('accepted_count', sa.Integer(), nullable=True),
    sa.Column('rejected_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_recommendations_active', 'user_recommendations', ['is_active'], unique=False)
    op.create_index('idx_user_recommendations_priority', 'user_recommendations', ['priority'], unique=False)
    op.create_index('idx_user_recommendations_type', 'user_recommendations', ['recommendation_type'], unique=False)
    op.create_index('idx_user_recommendations_user_id', 'user_recommendations', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_recommendations_user_id'), 'user_recommendations', ['user_id'], unique=False)
    op.create_table('analytics_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('analytics_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_category', sa.String(), nullable=False),
    sa.Column('event_action', sa.String(), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('device_type', sa.String(), nullable=True),
    sa.Column('browser', sa.String(), nullable=True),
    sa.Column('platform', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['analytics_id'], ['user_analytics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_analytics_events_session', 'analytics_events', ['session_id'], unique=False)
    op.create_index('idx_analytics_events_timestamp', 'analytics_events', ['timestamp'], unique=False)
    op.create_index('idx_analytics_events_type', 'analytics_events', ['event_type'], unique=False)
    op.create_index('idx_analytics_events_user_id', 'analytics_events', ['user_id'], unique=False)
    op.create_index(op.f('ix_analytics_events_analytics_id'), 'analytics_events', ['analytics_id'], unique=False)
    op.create_index(op.f('ix_analytics_events_user_id'), 'analytics_events', ['user_id'], unique=False)
    op.create_table('bingo_rewards',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('card_id', sa.UUID(), nullable=False),
    sa.Column('month_year', sa.Date(), nullable=False),
    sa.Column('line_types', sa.JSON(), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['user_bingo_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'month_year', name='uq_user_month_reward')
    )
    op.create_index('idx_rewards_user_month', 'bingo_rewards', ['user_id', 'month_year'], unique=False)
    op.create_index(op.f('ix_bingo_rewards_card_id'), 'bingo_rewards', ['card_id'], unique=False)
    op.create_index(op.f('ix_bingo_rewards_month_year'), 'bingo_rewards', ['month_year'], unique=False)
    op.create_index(op.f('ix_bingo_rewards_user_id'), 'bingo_rewards', ['user_id'], unique=False)
    op.create_table('karma_history',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('karma_before', sa.Integer(), nullable=False),
    sa.Column('karma_after', sa.Integer(), nullable=False),
    sa.Column('karma_change', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('reason_description', sa.Text(), nullable=True),
    sa.Column('triggered_by_action', sa.String(length=100), nullable=True),
    sa.Column('related_reading_id', sa.UUID(), nullable=True),
    sa.Column('related_user_id', sa.UUID(), nullable=True),
    sa.Column('action_context', sa.JSON(), nullable=True),
    sa.Column('faction_influence', sa.String(length=50), nullable=True),
    sa.Column('location_context', sa.String(length=100), nullable=True),
    sa.Column('multiplier_applied', sa.Float(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_reversible', sa.Boolean(), nullable=True),
    sa.Column('admin_review_required', sa.Boolean(), nullable=True),
    sa.Column('reviewed_by_admin', sa.String(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('alignment_before', sa.String(length=20), nullable=True),
    sa.Column('alignment_after', sa.String(length=20), nullable=True),
    sa.Column('alignment_changed', sa.Boolean(), nullable=True),
    sa.Column('significant_threshold_crossed', sa.Boolean(), nullable=True),
    sa.Column('automated_change', sa.Boolean(), nullable=True),
    sa.Column('rule_version', sa.String(length=20), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['related_reading_id'], ['completed_readings.id'], ),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_karma_history_related_reading_id'), 'karma_history', ['related_reading_id'], unique=False)
    op.create_index(op.f('ix_karma_history_related_user_id'), 'karma_history', ['related_user_id'], unique=False)
    op.create_index(op.f('ix_karma_history_user_id'), 'karma_history', ['user_id'], unique=False)
    op.create_table('reading_card_positions',
    sa.Column('reading_session_id', sa.UUID(), nullable=False),
    sa.Column('card_id', sa.UUID(), nullable=False),
    sa.Column('position_number', sa.Integer(), nullable=False),
    sa.Column('position_name', sa.String(length=100), nullable=True),
    sa.Column('position_meaning', sa.Text(), nullable=True),
    sa.Column('is_reversed', sa.Boolean(), nullable=True),
    sa.Column('draw_order', sa.Integer(), nullable=True),
    sa.Column('radiation_influence', sa.Float(), nullable=True),
    sa.Column('position_interpretation', sa.Text(), nullable=True),
    sa.Column('card_significance', sa.Text(), nullable=True),
    sa.Column('connection_to_question', sa.Text(), nullable=True),
    sa.Column('visual_effects', sa.JSON(), nullable=True),
    sa.Column('audio_cue', sa.String(length=200), nullable=True),
    sa.Column('reveal_delay', sa.Float(), nullable=True),
    sa.Column('user_resonance', sa.Integer(), nullable=True),
    sa.Column('interpretation_confidence', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['wasteland_cards.id'], ),
    sa.ForeignKeyConstraint(['reading_session_id'], ['completed_readings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reading_card_positions_card_id'), 'reading_card_positions', ['card_id'], unique=False)
    op.create_index(op.f('ix_reading_card_positions_reading_session_id'), 'reading_card_positions', ['reading_session_id'], unique=False)
    op.create_table('user_number_claims',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('card_id', sa.UUID(), nullable=False),
    sa.Column('daily_number_id', sa.UUID(), nullable=False),
    sa.Column('claim_date', sa.Date(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('claimed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('number >= 1 AND number <= 25', name='ck_claim_number_range'),
    sa.ForeignKeyConstraint(['card_id'], ['user_bingo_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['daily_number_id'], ['daily_bingo_numbers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'claim_date', name='uq_user_claim_date')
    )
    op.create_index('idx_claims_card', 'user_number_claims', ['card_id'], unique=False)
    op.create_index('idx_claims_user_date', 'user_number_claims', ['user_id', 'claim_date'], unique=False)
    op.create_index(op.f('ix_user_number_claims_card_id'), 'user_number_claims', ['card_id'], unique=False)
    op.create_index(op.f('ix_user_number_claims_claim_date'), 'user_number_claims', ['claim_date'], unique=False)
    op.create_index(op.f('ix_user_number_claims_daily_number_id'), 'user_number_claims', ['daily_number_id'], unique=False)
    op.create_index(op.f('ix_user_number_claims_user_id'), 'user_number_claims', ['user_id'], unique=False)
    op.drop_index(op.f('ix_apscheduler_jobs_next_run_time'), table_name='apscheduler_jobs')
    op.drop_table('apscheduler_jobs')
    op.drop_index(op.f('idx_user_readings_created'), table_name='user_readings')
    op.drop_index(op.f('idx_user_readings_public'), table_name='user_readings')
    op.drop_index(op.f('idx_user_readings_user_id'), table_name='user_readings')
    op.drop_table('user_readings')
    op.alter_column('user_preferences', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=False)
    op.drop_constraint(op.f('user_preferences_user_id_fkey'), 'user_preferences', type_='foreignkey')
    op.create_foreign_key(None, 'user_preferences', 'users', ['user_id'], ['id'])
    op.drop_column('user_preferences', 'preferred_spread_type')
    op.drop_column('user_preferences', 'language')
    op.drop_column('user_preferences', 'favorite_suit')
    op.drop_column('user_preferences', 'dark_mode')
    op.drop_column('user_preferences', 'notifications_enabled')
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_index(op.f('idx_user_profiles_faction'), table_name='user_profiles')
    op.drop_index(op.f('idx_user_profiles_karma'), table_name='user_profiles')
    op.drop_index(op.f('idx_user_profiles_user_id'), table_name='user_profiles')
    op.create_index(op.f('ix_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=False)
    op.drop_constraint(op.f('user_profiles_user_id_fkey'), 'user_profiles', type_='foreignkey')
    op.create_foreign_key(None, 'user_profiles', 'users', ['user_id'], ['id'])
    op.drop_column('user_profiles', 'timezone')
    op.drop_column('user_profiles', 'avatar_url')
    op.drop_column('user_profiles', 'bio')
    op.drop_column('user_profiles', 'experience_points')
    op.drop_column('user_profiles', 'faction_alignment')
    op.drop_column('user_profiles', 'karma_level')
    op.drop_column('user_profiles', 'display_name')
    op.drop_column('user_profiles', 'character_voice')
    op.drop_column('user_profiles', 'level')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'joined_groups',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))
    op.drop_index(op.f('idx_users_active'), table_name='users')
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_oauth'), table_name='users', postgresql_where='((oauth_provider IS NOT NULL) AND (oauth_id IS NOT NULL))')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint(None, 'users', ['webauthn_user_handle'])
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'username')
    op.alter_column('wasteland_cards', 'name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('wasteland_cards', 'suit',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='MAJOR_ARCANA, NUKA_COLA_BOTTLES, COMBAT_WEAPONS, BOTTLE_CAPS, RADIATION_RODS',
               existing_nullable=False)
    op.alter_column('wasteland_cards', 'radiation_level',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               type_=sa.Float(),
               existing_nullable=True,
               existing_server_default=sa.text('0.0'))
    op.alter_column('wasteland_cards', 'pip_boy_scan_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    # REMOVED: wasteland_cards.id conversion already done at the beginning of upgrade()
    op.drop_index(op.f('idx_wasteland_cards_number'), table_name='wasteland_cards')
    op.drop_index(op.f('idx_wasteland_cards_radiation'), table_name='wasteland_cards')
    op.drop_index(op.f('idx_wasteland_cards_suit'), table_name='wasteland_cards')
    op.drop_index(op.f('idx_wasteland_cards_threat'), table_name='wasteland_cards')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_wasteland_cards_threat'), 'wasteland_cards', ['threat_level'], unique=False)
    op.create_index(op.f('idx_wasteland_cards_suit'), 'wasteland_cards', ['suit'], unique=False)
    op.create_index(op.f('idx_wasteland_cards_radiation'), 'wasteland_cards', ['radiation_level'], unique=False)
    op.create_index(op.f('idx_wasteland_cards_number'), 'wasteland_cards', ['number'], unique=False)
    op.alter_column('wasteland_cards', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('wasteland_cards', 'pip_boy_scan_data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('wasteland_cards', 'radiation_level',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=4, scale=2),
               existing_nullable=True,
               existing_server_default=sa.text('0.0'))
    op.alter_column('wasteland_cards', 'suit',
               existing_type=sa.VARCHAR(length=50),
               comment='MAJOR_ARCANA, NUKA_COLA_BOTTLES, COMBAT_WEAPONS, BOTTLE_CAPS, RADIATION_RODS',
               existing_nullable=False)
    op.alter_column('wasteland_cards', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_users_oauth'), 'users', ['oauth_provider', 'oauth_id'], unique=True, postgresql_where='((oauth_provider IS NOT NULL) AND (oauth_id IS NOT NULL))')
    op.create_index(op.f('idx_users_username'), 'users', ['username'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('idx_users_active'), 'users', ['is_active'], unique=False)
    op.alter_column('users', 'joined_groups',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))
    op.alter_column('users', 'email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.add_column('user_profiles', sa.Column('level', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('character_voice', sa.VARCHAR(length=50), server_default=sa.text("'PIP_BOY'::character varying"), autoincrement=False, nullable=True, comment='PIP_BOY, VAULT_DWELLER, WASTELAND_TRADER, SUPER_MUTANT, CODSWORTH'))
    op.add_column('user_profiles', sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('karma_level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('faction_alignment', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='BROTHERHOOD_OF_STEEL, NCR_REPUBLIC, CAESAR_LEGION, RAIDERS, VAULT_DWELLER, INDEPENDENT'))
    op.add_column('user_profiles', sa.Column('experience_points', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('avatar_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('timezone', sa.VARCHAR(length=50), server_default=sa.text("'UTC'::character varying"), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_profiles', type_='foreignkey')
    op.create_foreign_key(op.f('user_profiles_user_id_fkey'), 'user_profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_profiles_user_id'), table_name='user_profiles')
    op.create_index(op.f('idx_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=False)
    op.create_index(op.f('idx_user_profiles_karma'), 'user_profiles', ['karma_level'], unique=False)
    op.create_index(op.f('idx_user_profiles_faction'), 'user_profiles', ['faction_alignment'], unique=False)
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.add_column('user_preferences', sa.Column('notifications_enabled', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('dark_mode', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('favorite_suit', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('language', sa.VARCHAR(length=10), server_default=sa.text("'zh-TW'::character varying"), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('preferred_spread_type', sa.VARCHAR(length=50), server_default=sa.text("'SINGLE_CARD'::character varying"), autoincrement=False, nullable=True, comment='SINGLE_CARD, VAULT_TEC_SPREAD, WASTELAND_SURVIVAL, BROTHERHOOD_COUNCIL'))
    op.drop_constraint(None, 'user_preferences', type_='foreignkey')
    op.create_foreign_key(op.f('user_preferences_user_id_fkey'), 'user_preferences', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.alter_column('user_preferences', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_table('user_readings',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spread_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('cards_drawn', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('cards_positions', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('cards_orientations', postgresql.ARRAY(sa.BOOLEAN()), autoincrement=False, nullable=True),
    sa.Column('interpretation_result', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('character_voice', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('karma_influence', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('faction_influence', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('feedback_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feedback_comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.CheckConstraint('feedback_rating >= 1 AND feedback_rating <= 5', name=op.f('user_readings_feedback_rating_check')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_readings_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('user_readings_pkey'))
    )
    op.create_index(op.f('idx_user_readings_user_id'), 'user_readings', ['user_id'], unique=False)
    op.create_index(op.f('idx_user_readings_public'), 'user_readings', ['is_public'], unique=False)
    op.create_index(op.f('idx_user_readings_created'), 'user_readings', ['created_at'], unique=False)
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('apscheduler_jobs_pkey'))
    )
    op.create_index(op.f('ix_apscheduler_jobs_next_run_time'), 'apscheduler_jobs', ['next_run_time'], unique=False)
    op.drop_index(op.f('ix_user_number_claims_user_id'), table_name='user_number_claims')
    op.drop_index(op.f('ix_user_number_claims_daily_number_id'), table_name='user_number_claims')
    op.drop_index(op.f('ix_user_number_claims_claim_date'), table_name='user_number_claims')
    op.drop_index(op.f('ix_user_number_claims_card_id'), table_name='user_number_claims')
    op.drop_index('idx_claims_user_date', table_name='user_number_claims')
    op.drop_index('idx_claims_card', table_name='user_number_claims')
    op.drop_table('user_number_claims')
    op.drop_index(op.f('ix_reading_card_positions_reading_session_id'), table_name='reading_card_positions')
    op.drop_index(op.f('ix_reading_card_positions_card_id'), table_name='reading_card_positions')
    op.drop_table('reading_card_positions')
    op.drop_index(op.f('ix_karma_history_user_id'), table_name='karma_history')
    op.drop_index(op.f('ix_karma_history_related_user_id'), table_name='karma_history')
    op.drop_index(op.f('ix_karma_history_related_reading_id'), table_name='karma_history')
    op.drop_table('karma_history')
    op.drop_index(op.f('ix_bingo_rewards_user_id'), table_name='bingo_rewards')
    op.drop_index(op.f('ix_bingo_rewards_month_year'), table_name='bingo_rewards')
    op.drop_index(op.f('ix_bingo_rewards_card_id'), table_name='bingo_rewards')
    op.drop_index('idx_rewards_user_month', table_name='bingo_rewards')
    op.drop_table('bingo_rewards')
    op.drop_index(op.f('ix_analytics_events_user_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_analytics_id'), table_name='analytics_events')
    op.drop_index('idx_analytics_events_user_id', table_name='analytics_events')
    op.drop_index('idx_analytics_events_type', table_name='analytics_events')
    op.drop_index('idx_analytics_events_timestamp', table_name='analytics_events')
    op.drop_index('idx_analytics_events_session', table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index(op.f('ix_user_recommendations_user_id'), table_name='user_recommendations')
    op.drop_index('idx_user_recommendations_user_id', table_name='user_recommendations')
    op.drop_index('idx_user_recommendations_type', table_name='user_recommendations')
    op.drop_index('idx_user_recommendations_priority', table_name='user_recommendations')
    op.drop_index('idx_user_recommendations_active', table_name='user_recommendations')
    op.drop_table('user_recommendations')
    op.drop_index(op.f('ix_user_friendships_requester_id'), table_name='user_friendships')
    op.drop_index(op.f('ix_user_friendships_recipient_id'), table_name='user_friendships')
    op.drop_table('user_friendships')
    op.drop_index(op.f('ix_user_bingo_cards_user_id'), table_name='user_bingo_cards')
    op.drop_index(op.f('ix_user_bingo_cards_month_year'), table_name='user_bingo_cards')
    op.drop_index('idx_user_bingo_cards_user_month', table_name='user_bingo_cards')
    op.drop_index('idx_user_bingo_cards_month', table_name='user_bingo_cards')
    op.drop_index('idx_user_bingo_cards_active', table_name='user_bingo_cards', postgresql_where=sa.text('is_active = true'))
    op.drop_table('user_bingo_cards')
    op.drop_index(op.f('ix_user_analytics_user_id'), table_name='user_analytics')
    op.drop_index('idx_user_analytics_user_id', table_name='user_analytics')
    op.drop_index('idx_user_analytics_last_active', table_name='user_analytics')
    op.drop_table('user_analytics')
    op.drop_index(op.f('ix_user_achievements_user_id'), table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_index(op.f('ix_reading_patterns_user_id'), table_name='reading_patterns')
    op.drop_index('idx_reading_patterns_user_id', table_name='reading_patterns')
    op.drop_index('idx_reading_patterns_type', table_name='reading_patterns')
    op.drop_index('idx_reading_patterns_confidence', table_name='reading_patterns')
    op.drop_table('reading_patterns')
    op.drop_index(op.f('ix_credentials_user_id'), table_name='credentials')
    op.drop_index(op.f('ix_credentials_credential_id'), table_name='credentials')
    op.drop_table('credentials')
    op.drop_index(op.f('ix_completed_readings_user_id'), table_name='completed_readings')
    op.drop_index(op.f('ix_completed_readings_spread_template_id'), table_name='completed_readings')
    op.drop_index(op.f('ix_completed_readings_interpretation_template_id'), table_name='completed_readings')
    op.drop_table('completed_readings')
    op.drop_index(op.f('ix_card_synergies_card_3_id'), table_name='card_synergies')
    op.drop_index(op.f('ix_card_synergies_card_2_id'), table_name='card_synergies')
    op.drop_index(op.f('ix_card_synergies_card_1_id'), table_name='card_synergies')
    op.drop_table('card_synergies')
    op.drop_index(op.f('ix_user_number_claims_history_user_id'), table_name='user_number_claims_history')
    op.drop_index(op.f('ix_user_number_claims_history_claim_date'), table_name='user_number_claims_history')
    op.drop_index('idx_claims_history_user_month', table_name='user_number_claims_history')
    op.drop_table('user_number_claims_history')
    op.drop_index(op.f('ix_user_bingo_cards_history_user_id'), table_name='user_bingo_cards_history')
    op.drop_index(op.f('ix_user_bingo_cards_history_month_year'), table_name='user_bingo_cards_history')
    op.drop_index('idx_cards_history_user_month', table_name='user_bingo_cards_history')
    op.drop_table('user_bingo_cards_history')
    op.drop_table('spread_templates')
    op.drop_index(op.f('ix_session_events_user_id'), table_name='session_events')
    op.drop_index(op.f('ix_session_events_session_id'), table_name='session_events')
    op.drop_index('idx_events_user_type', table_name='session_events')
    op.drop_index('idx_events_type_created', table_name='session_events')
    op.drop_index('idx_events_session', table_name='session_events')
    op.drop_table('session_events')
    op.drop_index(op.f('ix_reading_sessions_user_id'), table_name='reading_sessions')
    op.drop_index('idx_reading_sessions_user_status', table_name='reading_sessions')
    op.drop_index('idx_reading_sessions_user_id', table_name='reading_sessions')
    op.drop_index('idx_reading_sessions_status', table_name='reading_sessions')
    op.drop_index('idx_reading_sessions_created_at', table_name='reading_sessions')
    op.drop_table('reading_sessions')
    op.drop_index(op.f('ix_monthly_reset_logs_reset_date'), table_name='monthly_reset_logs')
    op.drop_index('idx_reset_logs_status', table_name='monthly_reset_logs')
    op.drop_index('idx_reset_logs_date', table_name='monthly_reset_logs')
    op.drop_table('monthly_reset_logs')
    op.drop_table('interpretation_templates')
    op.drop_index(op.f('ix_daily_bingo_numbers_date'), table_name='daily_bingo_numbers')
    op.drop_index('idx_daily_numbers_date', table_name='daily_bingo_numbers')
    op.drop_index('idx_daily_numbers_cycle', table_name='daily_bingo_numbers')
    op.drop_table('daily_bingo_numbers')
    op.drop_table('community_events')
    op.drop_index(op.f('ix_bingo_rewards_history_user_id'), table_name='bingo_rewards_history')
    op.drop_index(op.f('ix_bingo_rewards_history_month_year'), table_name='bingo_rewards_history')
    op.drop_index('idx_rewards_history_user_month', table_name='bingo_rewards_history')
    op.drop_table('bingo_rewards_history')
    # ### end Alembic commands ###
